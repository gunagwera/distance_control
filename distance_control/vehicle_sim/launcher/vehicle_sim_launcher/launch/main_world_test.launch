<launch>
  <!-- start world autoware-->

<arg name="model" default="$(find vehicle_model)/urdf/vehicle.xacro"/>
<arg name="ns" />
<arg name="gpu" default="false"/>
<param name="robot_description" command="$(find xacro)/xacro.py --inorder $(arg model) gpu:=$(arg gpu)" />
<include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" default="$(find gazebo_world_description)/worlds/road.world"/> 
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
</include>

  
  <!-- include our robots -->
  <include file="$(find vehicle_sim_launcher)/launch/vehicles.launch" />

  <group ns="/vehicle1"> <!-- $(arg ns) -->
    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find vehicle_model)/config/controller.yaml" command="load"/>
    <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
          output="screen" 
          args="wheel_left_rear_velocity_controller wheel_right_rear_velocity_controller steering_left_front_position_controller steering_right_front_position_controller joint_state_controller"/>
    <!-- tf publisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <rosparam file="$(find vehicle_model)/config/vehicle_info.yaml" command="load"/>
    <node name="vehicle_input_subscriber" pkg="vehicle_sim_interface" type="vehicle_input_subscriber" respawn="false"
          output="screen">
      <!-- <remap from="cmd_vel" to="/vehicle1/cmd_vel"/>
      <remap from="twist_cmd" to="/vehicle1/twist_cmd"/> | added vehicle1 and 2 -->
    </node>
    <node name="vehicle_info_publisher" pkg="vehicle_sim_interface" type="vehicle_info_publisher" respawn="false"
          output="screen">
    </node>
  </group>
  
  <group ns="/vehicle2"> <!-- $(arg ns) -->
    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find vehicle_model)/config/controller.yaml" command="load"/>
     <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
          output="screen" 
          args="wheel_left_rear_velocity_controller wheel_right_rear_velocity_controller steering_left_front_position_controller steering_right_front_position_controller joint_state_controller"/>
    <!-- tf publisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <rosparam file="$(find vehicle_model)/config/vehicle_info.yaml" command="load"/>

    
    <node name="vehicle_input_subscriber" pkg="vehicle_sim_interface" type="vehicle_input_subscriber" respawn="false"
          output="screen">
      <!-- <remap from="vehicle2/cmd_vel" to="/vehicle2/cmd_vel"/>
      <remap from="vehicle2/twist_cmd" to="/vehicle2/twist_cmd"/> || commented these out from both-->
    </node>
    <node name="vehicle_info_publisher" pkg="vehicle_sim_interface" type="vehicle_info_publisher" respawn="false"
          output="screen">
    </node>
  </group>


  <group ns="/vehicle3"> <!-- $(arg ns) -->
    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find vehicle_model)/config/controller.yaml" command="load"/>
     <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
          output="screen" 
          args="wheel_left_rear_velocity_controller wheel_right_rear_velocity_controller steering_left_front_position_controller steering_right_front_position_controller joint_state_controller"/>
    <!-- tf publisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <rosparam file="$(find vehicle_model)/config/vehicle_info.yaml" command="load"/>

    
    <node name="vehicle_input_subscriber" pkg="vehicle_sim_interface" type="vehicle_input_subscriber" respawn="false"
          output="screen">
      <!-- <remap from="vehicle3/cmd_vel" to="/vehicle3/cmd_vel"/>
      <remap from="vehicle3/twist_cmd" to="/vehicle3/twist_cmd"/> || commented these out from both-->
    </node>
    <node name="vehicle_info_publisher" pkg="vehicle_sim_interface" type="vehicle_info_publisher" respawn="false"
          output="screen">
    </node>
  </group>

  <group ns="/vehicle4"> <!-- $(arg ns) -->
    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find vehicle_model)/config/controller.yaml" command="load"/>
     <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
          output="screen" 
          args="wheel_left_rear_velocity_controller wheel_right_rear_velocity_controller steering_left_front_position_controller steering_right_front_position_controller joint_state_controller"/>
    <!-- tf publisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <rosparam file="$(find vehicle_model)/config/vehicle_info.yaml" command="load"/>

    
    <node name="vehicle_input_subscriber" pkg="vehicle_sim_interface" type="vehicle_input_subscriber" respawn="false"
          output="screen">
      <!-- <remap from="vehicle4/cmd_vel" to="/vehicle4/cmd_vel"/>
      <remap from="vehicle4/twist_cmd" to="/vehicle4/twist_cmd"/> || commented these out from both-->
    </node>
    <node name="vehicle_info_publisher" pkg="vehicle_sim_interface" type="vehicle_info_publisher" respawn="false"
          output="screen">
    </node>
  </group>
</launch>